#!/usr/bin/ruby

require 'sinatra/base'
require 'pathname'
require 's3'
require 'httpthumbnailer-client'

$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))
require 'httpimagestore/thumbnail_class'

sinatra = Sinatra.new

sinatra.set :port, 3000
sinatra.set :bind, 'localhost'
sinatra.set :environment, 'production'
sinatra.set :server, ['mongrel']
sinatra.set :lock, true

sinatra.set :s3_key_id, 'AKIAJMUYVYOSACNXLPTQ'
sinatra.set :s3_key_secret, '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'
sinatra.set :s3_bucket, 'rhthumbnails'

sinatra.set :thumbnailer_url, "http://localhost:3100"

class S3Put
	def initialize(key_id, key_secret, bucket)
		@tstamp = Time.new.to_i.to_s
		@bucket = S3::Service.new(:access_key_id => key_id, :secret_access_key => key_secret).buckets.find(bucket)
		puts "Bucket: #{@bucket}"
	end

	def put_original(image_path, content_type, data)
		image_path = Pathname.new(image_path)
		file_path = (image_path.dirname + @tstamp + image_path.basename).to_s

		file = @bucket.objects.build(file_path)
		file.content_type = content_type
		file.content = data
		file.save

		file_path
	end

	def put_thumbnail(image_path, thumbnail_class, content_type, data)
		image_path = Pathname.new(image_path)
		file_path = (image_path.dirname + @tstamp + "#{image_path.basename(image_path.extname)}-#{thumbnail_class}#{image_path.extname}").to_s

		file = @bucket.objects.build(file_path)
		file.content_type = content_type
		file.content = data
		file.save

		file_path
	end
end

sinatra.get '/' do
	"hello"
end

sinatra.put %r{/(.*)} do |image_path|
	s3 = S3Put.new(settings.s3_key_id, settings.s3_key_secret, settings.s3_bucket)
	thumbnailer = HTTPThumbnailerClient.new(settings.thumbnailer_url)

	urls = []

	image = request.body.read
	urls << s3.put_original(image_path, response.headers['Content-Type'], image)

	thumbnail_classes = []
	thumbnail_classes << ThumbnailClass.new(:small, 'crop', 128, 128)
	thumbnail_classes << ThumbnailClass.new(:tiny, 'crop', 32, 32)

	thumbs = thumbnailer.thumbnail(image) do
		thumbnail_classes.each do |tc|
			thumbnail tc.method, tc.width, tc.height, tc.format, tc.options
		end
	end

	thumbs.zip(thumbnail_classes).each do |thumb, tc|
		urls << s3.put_thumbnail(image_path, tc.name, thumb.mime_type, thumb.data)
	end

	return urls.join("\n")
end

sinatra.run!

